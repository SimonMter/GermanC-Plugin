{
  "scopeName": "source.germanc",
  "patterns": [
      {
          "name": "keyword.control.germanc",
          "match": "\\b(ganzzahl|fließkommazahl|zeichen|zurück|wenn|sonst|während|für|leer|breche|fortsetzen|strukturen|union|enum|typedef|volatile|register|inline)\\b"
      },
      {
          "name": "keyword.constant.germanc",
          "match": "\\b(wahr|falsch|null)\\b"
      },
      {
          "name": "keyword.storage.germanc",
          "match": "\\b(konstant|extern|statisch|zeichenfolge)\\b"
      },
      {
          "name": "meta.preprocessor.germanc",
          "match": "\\b(einschließen|definieren)\\b"
      },
      {
          "name": "comment.line.double-slash.germanc",
          "match": "//.*$"
      },
      {
          "name": "comment.block.germanc",
          "begin": "/\\*",
          "end": "\\*/",
          "patterns": [
              {
                  "name": "comment.block.documentation.germanc",
                  "match": "\\*\\*.*"
              }
          ]
      },
      {
          "name": "string.quoted.double.germanc",
          "match": "\".*?\""
      },
      {
          "name": "variable.other.germanc",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
      },
      {
          "name": "storage.type.germanc",
          "match": "\\b(ganzzahl|zeichen|leer)\\b"
      },
      {
          "name": "keyword.operator.germanc",
          "match": "[+\\-*/=<>!&|]"
      },
      {
          "name": "constant.numeric.germanc",
          "match": "\\b\\d+(\\.\\d+)?\\b"
      },
      {
          "name": "entity.name.function.germanc",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\s*(?=\\()"
      },
      {
          "name": "constant.language.germanc",
          "match": "\\b(true|false|null)\\b"
      }
  ],
  "repository": {},
  "name": "germanc"
}